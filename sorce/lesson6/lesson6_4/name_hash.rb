# 名前付き引数としてのハッシュ

# メソッドを呼び出す時は正しい順番で引数を指定しなければならない
# メソッドの引数が多くなってくると、
# 引数の正しい順番を覚えておいてメソッドを呼び出すのは難しくなる

# そんな時は、他の言語では『仮引数』という機能を使うことで、
# メソッドの引数の順番を覚えておかなくてもよい

# でも、ruby では仮引数名を指定して、メソッドを呼出す機能をサポートしていない

# ただし、メソッドの引数にハッシュオブジェクトを指定する事で、
# 似たような機能をメソッドに持たせる事ができる

# キーを名前に使うことによって、キーに指定した引数へ値を渡す事ができる

def cubage(args)
	# デフォルト値の設定
	x = args[:x] || 10
	y = args[:y] || 10
	h = args[:h] || 10
	return x * y * h
end

p cubage(:h => 100)


# ハッシュオブジェクトをメソッドの最期の引数に指定するならば、
# ハッシュオブジェクトを囲む{}はなくてもよい
# {}で囲まなくても、キーと値だけで、ハッシュオブジェクトをメソッドの引数に指定する事ができる.

